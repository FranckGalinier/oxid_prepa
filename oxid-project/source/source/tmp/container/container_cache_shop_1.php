<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\ParameterNotFoundException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
use Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class ProjectServiceContainer extends Container
{
    protected $parameters = [];
    protected \Closure $getService;

    public function __construct()
    {
        $this->parameters = $this->getDefaultParameters();

        $this->services = $this->privates = [];
        $this->methodMap = [
            'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand' => 'getDemodataCommandService',
            'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataDaoInterface' => 'getDemodataDaoInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\PasswordServiceBridgeInterface' => 'getPasswordServiceBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\RandomTokenGeneratorBridgeInterface' => 'getRandomTokenGeneratorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormBridgeInterface' => 'getContactFormBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Newsletter\\Bridge\\NewsletterRecipientsDaoBridgeInterface' => 'getNewsletterRecipientsDaoBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Newsletter\\DataMapper\\NewsletterRecipientsDataMapperInterface' => 'getNewsletterRecipientsDataMapperInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\ProductRatingBridgeInterface' => 'getProductRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserRatingBridgeInterface' => 'getUserRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewAndRatingBridgeInterface' => 'getUserReviewAndRatingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewBridgeInterface' => 'getUserReviewBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Console\\ExecutorInterface' => 'getExecutorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ProjectYamlImportServiceInterface' => 'getProjectYamlImportServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ShopStateServiceInterface' => 'getShopStateServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\ConnectionProviderInterface' => 'getConnectionProviderInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\DatabaseLoggerFactoryInterface' => 'getDatabaseLoggerFactoryInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface' => 'getQueryBuilderFactoryInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\Bridge\\MasterImageHandlerBridgeInterface' => 'getMasterImageHandlerBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\FileGenerator\\Bridge\\FileGeneratorBridgeInterface' => 'getFileGeneratorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\Validator\\FileValidatorBridgeInterface' => 'getFileValidatorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface' => 'getLoggerConfigurationValidatorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceBridgeInterface' => 'getModuleCacheServiceBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface' => 'getModuleCacheServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleConfigurationDaoBridgeInterface' => 'getModuleConfigurationDaoBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleSettingBridgeInterface' => 'getModuleSettingBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ShopConfigurationDaoBridgeInterface' => 'getShopConfigurationDaoBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface' => 'getProjectConfigurationDaoInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface' => 'getShopConfigurationDaoInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderBridgeInterface' => 'getActiveModulesDataProviderBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ModuleSettingServiceInterface' => 'getModuleSettingServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface' => 'getModuleConfigurationInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface' => 'getModuleFilesInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface' => 'getModuleInstallerInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverBridgeInterface' => 'getModuleAssetsPathResolverBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ModuleActivationBridgeInterface' => 'getModuleActivationBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface' => 'getActiveClassExtensionChainResolverInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface' => 'getModuleStateServiceInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Bridge\\AdminAreaModuleTranslationFileLocatorBridgeInterface' => 'getAdminAreaModuleTranslationFileLocatorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Bridge\\FrontendModuleTranslationFileLocatorBridgeInterface' => 'getFrontendModuleTranslationFileLocatorBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\AdminAreaModuleTranslationFileLocatorInterface' => 'getAdminAreaModuleTranslationFileLocatorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\FrontendModuleTranslationFileLocatorInterface' => 'getFrontendModuleTranslationFileLocatorInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateFileResolverBridgeInterface' => 'getTemplateFileResolverBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererBridgeInterface' => 'getTemplateRendererBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface' => 'getTemplateRendererInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface' => 'getAdminThemeBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface' => 'getBasicContextInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface' => 'getContextInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceBridgeInterface' => 'getEmailValidatorServiceBridgeInterfaceService',
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Header\\Bridge\\HeaderGeneratorBridgeInterface' => 'getHeaderGeneratorBridgeInterfaceService',
            'OxidEsales\\Twig\\TwigEngineConfigurationInterface' => 'getTwigEngineConfigurationInterfaceService',
            'Psr\\Log\\LoggerInterface' => 'getLoggerInterfaceService',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => 'getEventDispatcherInterfaceService',
            'console.command_loader' => 'getConsole_CommandLoaderService',
            'oxid_esales.console.symfony.component.console.application' => 'getOxidEsales_Console_Symfony_Component_Console_ApplicationService',
            'oxid_esales.module.install.service.bootstrap_module_installer' => 'getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService',
            'oxid_esales.module.install.service.installed_shop_project_configuration_generator' => 'getOxidEsales_Module_Install_Service_InstalledShopProjectConfigurationGeneratorService',
            'oxid_esales.module.install.service.launched_shop_project_configuration_generator' => 'getOxidEsales_Module_Install_Service_LaunchedShopProjectConfigurationGeneratorService',
            'oxid_esales.symfony.file_system' => 'getOxidEsales_Symfony_FileSystemService',
            'oxid_esales.templating.admin.navigation.file.locator' => 'getOxidEsales_Templating_Admin_Navigation_File_LocatorService',
        ];

        $this->aliases = [];
    }

    public function compile(): void
    {
        throw new LogicException('You cannot compile a dumped container that was already compiled.');
    }

    public function isCompiled(): bool
    {
        return true;
    }

    public function getRemovedIds(): array
    {
        return [
            '.service_locator.PiIj3CU' => true,
            '.service_locator.PtACPDL' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Dao\\AdminDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Factory\\AdminFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Service\\AdminUserServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Generator\\RandomTokenGeneratorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Service\\PasswordVerificationServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormMessageBuilderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Newsletter\\Dao\\NewsletterRecipientsDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\ProductRatingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\ReviewDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\ProductRatingDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\RatingDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\DataMapper\\ReviewDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\ProductRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\RatingCalculatorServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\ReviewAndRatingMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewAndRatingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Service\\UserReviewServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Dao\\ShopConfigurationSettingDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Config\\Utility\\ShopSettingEncoderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ContainerCacheInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\NullLogger' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\QueryFilterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\QueryLogger' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\TransactionServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\FileGenerator\\FileGeneratorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\FinderFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\ImageHandlerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\Validator\\FileValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Configuration\\MonologConfigurationInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Factory\\LoggerFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Migration\\MigrationExecutorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Cache\\ModuleConfigurationCacheInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\Chain\\ClassExtensionsChainDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\Chain\\TemplateExtensionChainDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationExtenderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleEnvironmentConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\DataMapper\\ModuleConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Definition\\TreeBuilderFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\ModuleClassExtensionsMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\ModuleConfigurationMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Service\\SettingsMergingServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ModulesDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Converter\\MetaDataConverterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataNormalizerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataSchemataProviderInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\DataMapper\\MetaDataToModuleConfigurationDataMapperInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataSchemaValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleServicesImporterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Validator\\ModuleConfigurationValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Template\\Locator\\ModulesMenuFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\SystemRequirements\\SystemSecurityCheckerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\ShopTemplateCacheServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\TemplateCacheServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\AdminTemplateFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\TemplateFileLocator' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateFileResolverInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateEngineInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\ConfigFile\\ConfigFileDaoInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Database\\Service\\DatabaseCheckerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Database\\Service\\DatabaseCreatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Database\\Service\\DatabaseInitiatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Database\\Service\\DatabaseInstallerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Directory\\Service\\DirectoryValidatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Htaccess\\HtaccessDaoFactoryInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Htaccess\\HtaccessUpdaterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\Language\\LanguageInstallerInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\AddUrlParametersLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ContentFactory' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\DateFormatHelper' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FileSizeLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatCurrencyLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatDateLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatPriceLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\FormatTimeLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IfContentLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IncludeDynamicLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\IncludeWidgetLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\InputHelpLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\InsertNewBasketItemLogicTwig' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ScriptLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\SeoUrlLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\SmartWordwrapLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\StyleLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateFilterLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateFunctionLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TranslateSalutationLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\TruncateLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\WordwrapLogic' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\Translator\\TranslatorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Authentication\\Policy\\PasswordPolicyInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Hash\\Service\\PasswordHashServiceInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Header\\HeaderGeneratorInterface' => true,
            'OxidEsales\\EshopCommunity\\Internal\\Utility\\Url\\UrlParserInterface' => true,
            'OxidEsales\\Eshop\\Core\\Config' => true,
            'OxidEsales\\Eshop\\Core\\Language' => true,
            'OxidEsales\\Twig\\Escaper\\DecEntityEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\HexEntityEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\HexEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\HtmlAllEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\MailEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\NonStdEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\QuotesEscaper' => true,
            'OxidEsales\\Twig\\Escaper\\UrlPathInfoEscaper' => true,
            'OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber' => true,
            'OxidEsales\\Twig\\Extensions\\CaptureExtension' => true,
            'OxidEsales\\Twig\\Extensions\\ExtendsExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\CatExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\DateFormatExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\EncloseExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\FileSizeExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\FormatCurrencyExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\FormatDateExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\FormatTimeExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\PhpFunctionsExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\RegexReplaceExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\SmartWordwrapExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\TranslateExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\TranslateSalutationExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\TruncateExtension' => true,
            'OxidEsales\\Twig\\Extensions\\Filters\\WordwrapExtension' => true,
            'OxidEsales\\Twig\\Extensions\\FormatPriceExtension' => true,
            'OxidEsales\\Twig\\Extensions\\GetRequestVariablesExtension' => true,
            'OxidEsales\\Twig\\Extensions\\HasRightsExtension' => true,
            'OxidEsales\\Twig\\Extensions\\IfContentExtension' => true,
            'OxidEsales\\Twig\\Extensions\\IncludeContentExtension' => true,
            'OxidEsales\\Twig\\Extensions\\IncludeExtension' => true,
            'OxidEsales\\Twig\\Extensions\\IncludeWidgetExtension' => true,
            'OxidEsales\\Twig\\Extensions\\InputHelpExtension' => true,
            'OxidEsales\\Twig\\Extensions\\InsertNewBasketItemExtension' => true,
            'OxidEsales\\Twig\\Extensions\\InsertTrackerExtension' => true,
            'OxidEsales\\Twig\\Extensions\\MailtoExtension' => true,
            'OxidEsales\\Twig\\Extensions\\MathExtension' => true,
            'OxidEsales\\Twig\\Extensions\\PhpFunctionsExtension' => true,
            'OxidEsales\\Twig\\Extensions\\ScriptExtension' => true,
            'OxidEsales\\Twig\\Extensions\\SmartyCycleExtension' => true,
            'OxidEsales\\Twig\\Extensions\\StyleExtension' => true,
            'OxidEsales\\Twig\\Extensions\\TranslateExtension' => true,
            'OxidEsales\\Twig\\Extensions\\UrlExtension' => true,
            'OxidEsales\\Twig\\Loader\\CmsLoader' => true,
            'OxidEsales\\Twig\\Loader\\CmsTemplateNameParser' => true,
            'OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver' => true,
            'OxidEsales\\Twig\\Resolver\\ShopTemplateDirectoryResolver' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\SortingConfigurationValidatorInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainBuilderInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainResolverInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainSorterInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainValidatorInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ChainAppenderInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleExtensions\\ModuleExtensionTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleExtensions\\ModuleTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleExtensions\\ShopExtensionTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleExtensions\\ShopTemplateChainAppender' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleExtensions\\ShopTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ModuleTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateHandler\\ShopTemplateHandler' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateType\\InitialTemplateResolverInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateType\\TemplateTypeFactoryInterface' => true,
            'OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface' => true,
            'OxidEsales\\Twig\\TokenParser\\HasRightsTokenParser' => true,
            'OxidEsales\\Twig\\TwigContextInterface' => true,
            'Symfony\\Component\\Filesystem\\Filesystem' => true,
            'Twig\\Extension\\StringLoaderExtension' => true,
            'common.form.required_fields_validator' => true,
            'database.logger.admin_monolog_configuration' => true,
            'database.monolog_logger_factory' => true,
            'database.psr_logger' => true,
            'event_dispatcher' => true,
            'form.contact_form.contact_form_configuration' => true,
            'form.contact_form.contact_form_configuration_factory' => true,
            'form.contact_form.contact_form_email_validator' => true,
            'form.contact_form.contact_form_factory' => true,
            'form.contact_form.contact_form_fields_configuration_data_provider' => true,
            'oxid_esales.command.clearcache_command' => true,
            'oxid_esales.command.module_activate_command' => true,
            'oxid_esales.command.module_deactivate_command' => true,
            'oxid_esales.common.file_locator' => true,
            'oxid_esales.common.storage.flock_store' => true,
            'oxid_esales.common.storage.flock_store_lock_factory' => true,
            'oxid_esales.console.commands_provider.services_commands_provider' => true,
            'oxid_esales.module.cache.invalidate_module_cache_event_subscriber' => true,
            'oxid_esales.module.configuration.class_extensions_data_mapper' => true,
            'oxid_esales.module.configuration.controllers_data_mapper' => true,
            'oxid_esales.module.configuration.events_data_mapper' => true,
            'oxid_esales.module.configuration.module_settings_data_mapper' => true,
            'oxid_esales.module.configuration.node' => true,
            'oxid_esales.module.meta_data.converter.shop_module_settings_boolean_converter' => true,
            'oxid_esales.module.meta_data.validator.module_id_validator' => true,
            'oxid_esales.module.meta_data.validator.shop_module_setting_boolean_validator' => true,
            'oxid_esales.module.metadata.datamapper.metadatamapper' => true,
            'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber' => true,
            'oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber' => true,
            'oxid_esales.module.setup.validator.class_extensions_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.controllers_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.events_module_setting_validator' => true,
            'oxid_esales.module.setup.validator.services_yaml_validator' => true,
            'oxid_esales.monolog.logger' => true,
            'oxid_esales.symfony.mime_types' => true,
            'oxid_esales.twig.resolver.template_chain.modules_template_chain_builder' => true,
            'oxid_esales.twig.resolver.template_chain.shop_template_chain_builder' => true,
            'twig' => true,
            'twig.loader.chain' => true,
            'twig.loader.filesystem' => true,
        ];
    }

    /**
     * Gets the public 'OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataCommand' shared autowired service.
     *
     * @return \OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataCommand
     */
    protected static function getDemodataCommandService($container)
    {
        $container->services['OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand'] = $instance = new \OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataCommand(($container->services['OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataDaoInterface'] ?? self::getDemodataDaoInterfaceService($container)));

        $instance->setName('oe:setup:demodata');

        return $instance;
    }

    /**
     * Gets the public 'OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataDao
     */
    protected static function getDemodataDaoInterfaceService($container)
    {
        return $container->services['OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataDaoInterface'] = new \OxidEsales\DemoDataInstaller\Framework\Module\Demodata\DemodataDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridge
     */
    protected static function getPasswordServiceBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\PasswordServiceBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\PasswordServiceBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Hash\\Service\\PasswordHashServiceInterface'] ?? self::getPasswordHashServiceInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Service\PasswordVerificationService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Authentication\\Policy\\PasswordPolicyInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Utility\Authentication\Policy\PasswordPolicy())));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridge
     */
    protected static function getRandomTokenGeneratorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Authentication\\Bridge\\RandomTokenGeneratorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Bridge\RandomTokenGeneratorBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Authentication\Generator\RandomTokenGenerator());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridge
     */
    protected static function getContactFormBridgeInterfaceService($container)
    {
        $a = self::getForm_ContactForm_ContactFormConfigurationService($container);

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Contact\\Form\\ContactFormBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormFactory($a, new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormEmailValidator(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorService())), new \OxidEsales\EshopCommunity\Internal\Framework\Form\RequiredFieldsValidator()), new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormMessageBuilder(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter())), $a);
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Newsletter\Bridge\NewsletterRecipientsDaoBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Newsletter\Bridge\NewsletterRecipientsDaoBridge
     */
    protected static function getNewsletterRecipientsDaoBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Newsletter\\Bridge\\NewsletterRecipientsDaoBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Newsletter\Bridge\NewsletterRecipientsDaoBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Newsletter\Dao\NewsletterRecipientsDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container))));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Newsletter\DataMapper\NewsletterRecipientsDataMapperInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Newsletter\DataMapper\NewsletterRecipientsDataMapper
     */
    protected static function getNewsletterRecipientsDataMapperInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Newsletter\\DataMapper\\NewsletterRecipientsDataMapperInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Newsletter\DataMapper\NewsletterRecipientsDataMapper();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridge
     */
    protected static function getProductRatingBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\ProductRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\ProductRatingBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\ProductRatingService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] ?? self::getRatingDaoInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\ProductRatingDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\ProductRatingDataMapper()), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\RatingCalculatorService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridge
     */
    protected static function getUserRatingBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserRatingBridge();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridge
     */
    protected static function getUserReviewAndRatingBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewAndRatingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewAndRatingBridge(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewAndRatingService(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserReviewService(new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\ReviewDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\ReviewDataMapper())), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\UserRatingService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] ?? self::getRatingDaoInterfaceService($container))), new \OxidEsales\EshopCommunity\Internal\Domain\Review\Service\ReviewAndRatingMergingService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridge
     */
    protected static function getUserReviewBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Bridge\\UserReviewBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Bridge\UserReviewBridge();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Console\ExecutorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Console\Executor
     */
    protected static function getExecutorInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Console\\ExecutorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Console\Executor(($container->services['oxid_esales.console.symfony.component.console.application'] ??= new \Symfony\Component\Console\Application()), new \OxidEsales\EshopCommunity\Internal\Framework\Console\CommandsProvider\ServicesCommandsProvider($container));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportService
     */
    protected static function getProjectYamlImportServiceInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ProjectYamlImportServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ProjectYamlImportService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] ?? self::getProjectYamlDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateService
     */
    protected static function getShopStateServiceInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ShopStateServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\ShopStateService(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), '\\OxidEsales\\Eshop\\Core\\Registry');
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Database\ConnectionProviderInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Database\ConnectionProvider
     */
    protected static function getConnectionProviderInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\ConnectionProviderInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Database\ConnectionProvider();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactory
     */
    protected static function getDatabaseLoggerFactoryInterfaceService($container)
    {
        $a = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context());

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\Logger\\DatabaseLoggerFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\DatabaseLoggerFactory($a, new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryLogger(new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\QueryFilter(), $a, (new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory(new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration('OXID Admin Logger', ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())->getAdminLogFilePath(), 'debug'), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator())))->create()), new \OxidEsales\EshopCommunity\Internal\Framework\Database\Logger\NullLogger());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactory
     */
    protected static function getQueryBuilderFactoryInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Database\QueryBuilderFactory(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\ConnectionProviderInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Database\ConnectionProvider()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Bridge\MasterImageHandlerBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Bridge\MasterImageHandlerBridge
     */
    protected static function getMasterImageHandlerBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\Bridge\\MasterImageHandlerBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Bridge\MasterImageHandlerBridge(new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\MasterImageHandler(($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\FileSystem\FileGenerator\Bridge\FileGeneratorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\FileGenerator\Bridge\CsvFileGeneratorBridge
     */
    protected static function getFileGeneratorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\FileGenerator\\Bridge\\FileGeneratorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\FileGenerator\Bridge\CsvFileGeneratorBridge(new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\FileGenerator\CsvFileGenerator());
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Validator\FileValidatorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Validator\FileValidatorBridge
     */
    protected static function getFileValidatorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\FileSystem\\Validator\\FileValidatorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Validator\FileValidatorBridge(new \OxidEsales\EshopCommunity\Internal\Framework\FileSystem\Validator\FileValidator(new \Symfony\Component\Mime\MimeTypes()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\LoggerConfigurationValidatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator
     */
    protected static function getLoggerConfigurationValidatorInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\ModuleCacheServiceBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\FilesystemModuleCacheBridge
     */
    protected static function getModuleCacheServiceBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\FilesystemModuleCacheBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] ?? self::getModuleCacheServiceInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\ModuleCacheServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\FilesystemModuleCache
     */
    protected static function getModuleCacheServiceInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\FilesystemModuleCache(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\ShopTemplateCacheServiceInterface'] ?? self::getShopTemplateCacheServiceInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridge
     */
    protected static function getModuleConfigurationDaoBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleConfigurationDaoBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleConfigurationDaoBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleEnvironmentConfigurationDaoInterface'] ?? self::getModuleEnvironmentConfigurationDaoInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridge
     */
    protected static function getModuleSettingBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ModuleSettingBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ModuleSettingBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridge
     */
    protected static function getShopConfigurationDaoBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Bridge\\ShopConfigurationDaoBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Bridge\ShopConfigurationDaoBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDao
     */
    protected static function getProjectConfigurationDaoInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ProjectConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ProjectConfigurationDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDao
     */
    protected static function getShopConfigurationDaoInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container));

        if (isset($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'])) {
            return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'];
        }
        $b = ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container));

        if (isset($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'])) {
            return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'];
        }
        $c = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext());
        $d = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] ?? self::getFileStorageFactoryInterfaceService($container));

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopConfigurationDao($c, ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), $a, new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\Chain\ClassExtensionsChainDao($c, $d, $b), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\Chain\TemplateExtensionChainDao($c, $d));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProviderBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProviderBridge
     */
    protected static function getActiveModulesDataProviderBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProviderBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'] ?? self::getActiveModulesDataProviderInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ModuleSettingServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ModuleSettingService
     */
    protected static function getModuleSettingServiceInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ModuleSettingServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ModuleSettingService(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] ?? self::getModuleCacheServiceInterfaceService($container)), ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstaller
     */
    protected static function getModuleConfigurationInstallerInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleConfigurationInstaller(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\ModuleConfigurationMergingService(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\SettingsMergingService(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Service\ModuleClassExtensionsMergingService()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterface2Service($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstaller
     */
    protected static function getModuleFilesInstallerInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleFilesInstaller(($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterface2Service($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverInterface'] ?? self::getModuleAssetsPathResolverInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstallerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstaller
     */
    protected static function getModuleInstallerInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ModuleInstaller(($container->services['oxid_esales.module.install.service.bootstrap_module_installer'] ?? self::getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? self::getModuleActivationServiceInterfaceService($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterface2Service($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? self::getModuleStateServiceInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolverBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolverBridge
     */
    protected static function getModuleAssetsPathResolverBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolverBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverInterface'] ?? self::getModuleAssetsPathResolverInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridge
     */
    protected static function getModuleActivationBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Bridge\\ModuleActivationBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Bridge\ModuleActivationBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? self::getModuleActivationServiceInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? self::getModuleStateServiceInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ActiveClassExtensionChainResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ActiveClassExtensionChainResolver
     */
    protected static function getActiveClassExtensionChainResolverInterfaceService($container)
    {
        $a = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container));

        if (isset($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'])) {
            return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'];
        }
        $b = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] ?? self::getModuleStateServiceInterfaceService($container));

        if (isset($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'])) {
            return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'];
        }

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ActiveClassExtensionChainResolver($a, $b);
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateService
     */
    protected static function getModuleStateServiceInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container));

        if (isset($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'])) {
            return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'];
        }

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\State\\ModuleStateServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\State\ModuleStateService($a);
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\AdminAreaModuleTranslationFileLocatorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\AdminAreaModuleTranslationFileLocatorBridge
     */
    protected static function getAdminAreaModuleTranslationFileLocatorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Bridge\\AdminAreaModuleTranslationFileLocatorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\AdminAreaModuleTranslationFileLocatorBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\AdminAreaModuleTranslationFileLocatorInterface'] ?? self::getAdminAreaModuleTranslationFileLocatorInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\FrontendModuleTranslationFileLocatorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\FrontendModuleTranslationFileLocatorBridge
     */
    protected static function getFrontendModuleTranslationFileLocatorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Bridge\\FrontendModuleTranslationFileLocatorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Bridge\FrontendModuleTranslationFileLocatorBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\FrontendModuleTranslationFileLocatorInterface'] ?? self::getFrontendModuleTranslationFileLocatorInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\AdminAreaModuleTranslationFileLocatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\AdminAreaModuleTranslationFileLocator
     */
    protected static function getAdminAreaModuleTranslationFileLocatorInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\AdminAreaModuleTranslationFileLocatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\AdminAreaModuleTranslationFileLocator(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ModulesDataProvider(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] ?? self::getModulePathResolverInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), 'admin_twig');
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\FrontendModuleTranslationFileLocatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\FrontendModuleTranslationFileLocator
     */
    protected static function getFrontendModuleTranslationFileLocatorInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Translation\\Locator\\FrontendModuleTranslationFileLocatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Translation\Locator\FrontendModuleTranslationFileLocator(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'] ?? self::getActiveModulesDataProviderInterfaceService($container)), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateFileResolverBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateFileResolverBridge
     */
    protected static function getTemplateFileResolverBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateFileResolverBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateFileResolverBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateFileResolverInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateFileResolver('html.twig')));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRendererBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\Twig\Bridge\TwigTemplateRendererBridge
     */
    protected static function getTemplateRendererBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererBridgeInterface'] = new \OxidEsales\Twig\Bridge\TwigTemplateRendererBridge(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface'] ?? self::getTemplateRendererInterfaceService($container)));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRendererInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRenderer
     */
    protected static function getTemplateRendererInterfaceService($container)
    {
        $a = new \Twig\Loader\ChainLoader();
        $a->addLoader(($container->privates['twig.loader.filesystem'] ?? self::getTwig_Loader_FilesystemService($container)));
        $a->addLoader(new \OxidEsales\Twig\Loader\CmsLoader(new \OxidEsales\Twig\Loader\CmsTemplateNameParser(), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ContentFactory'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\ContentFactory())));

        $b = new \Twig\Environment($a, ($container->services['OxidEsales\\Twig\\TwigEngineConfigurationInterface'] ?? self::getTwigEngineConfigurationInterfaceService($container))->getParameters());
        $b->addGlobal('twig', ['capture' => []]);
        $b->addGlobal('oView', []);

        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\TemplateRendererInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\TemplateRenderer(new \OxidEsales\Twig\TwigEngine($b, 'html.twig', ($container->privates['OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainResolverInterface'] ?? self::getTemplateChainResolverInterfaceService($container)), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['OxidEsales\\Twig\\Extensions\\MathExtension'] ??= new \OxidEsales\Twig\Extensions\MathExtension());
            yield 1 => ($container->privates['OxidEsales\\Twig\\Extensions\\IncludeExtension'] ?? self::getIncludeExtensionService($container));
            yield 2 => ($container->privates['OxidEsales\\Twig\\Extensions\\SmartyCycleExtension'] ?? self::getSmartyCycleExtensionService($container));
            yield 3 => ($container->privates['OxidEsales\\Twig\\Extensions\\MailtoExtension'] ??= new \OxidEsales\Twig\Extensions\MailtoExtension());
            yield 4 => ($container->privates['OxidEsales\\Twig\\Extensions\\UrlExtension'] ?? self::getUrlExtensionService($container));
            yield 5 => ($container->privates['Twig\\Extension\\StringLoaderExtension'] ??= new \Twig\Extension\StringLoaderExtension());
            yield 6 => ($container->privates['OxidEsales\\Twig\\Extensions\\HasRightsExtension'] ?? self::getHasRightsExtensionService($container));
            yield 7 => ($container->privates['OxidEsales\\Twig\\Extensions\\IfContentExtension'] ?? self::getIfContentExtensionService($container));
            yield 8 => ($container->privates['OxidEsales\\Twig\\Extensions\\FormatPriceExtension'] ?? self::getFormatPriceExtensionService($container));
            yield 9 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\CatExtension'] ??= new \OxidEsales\Twig\Extensions\Filters\CatExtension());
            yield 10 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\EncloseExtension'] ??= new \OxidEsales\Twig\Extensions\Filters\EncloseExtension());
            yield 11 => ($container->privates['OxidEsales\\Twig\\Extensions\\ScriptExtension'] ?? self::getScriptExtensionService($container));
            yield 12 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatDateExtension'] ?? self::getFormatDateExtensionService($container));
            yield 13 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\DateFormatExtension'] ?? self::getDateFormatExtensionService($container));
            yield 14 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TranslateExtension'] ?? self::getTranslateExtensionService($container));
            yield 15 => ($container->privates['OxidEsales\\Twig\\Extensions\\TranslateExtension'] ?? self::getTranslateExtension2Service($container));
            yield 16 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatTimeExtension'] ?? self::getFormatTimeExtensionService($container));
            yield 17 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FileSizeExtension'] ?? self::getFileSizeExtensionService($container));
            yield 18 => ($container->privates['OxidEsales\\Twig\\Extensions\\StyleExtension'] ?? self::getStyleExtensionService($container));
            yield 19 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TruncateExtension'] ?? self::getTruncateExtensionService($container));
            yield 20 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TranslateSalutationExtension'] ?? self::getTranslateSalutationExtensionService($container));
            yield 21 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatCurrencyExtension'] ?? self::getFormatCurrencyExtensionService($container));
            yield 22 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\WordwrapExtension'] ?? self::getWordwrapExtensionService($container));
            yield 23 => ($container->privates['OxidEsales\\Twig\\Extensions\\IncludeWidgetExtension'] ?? self::getIncludeWidgetExtensionService($container));
            yield 24 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\SmartWordwrapExtension'] ?? self::getSmartWordwrapExtensionService($container));
            yield 25 => ($container->privates['OxidEsales\\Twig\\Extensions\\InputHelpExtension'] ?? self::getInputHelpExtensionService($container));
            yield 26 => ($container->privates['OxidEsales\\Twig\\Extensions\\PhpFunctionsExtension'] ??= new \OxidEsales\Twig\Extensions\PhpFunctionsExtension());
            yield 27 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\PhpFunctionsExtension'] ??= new \OxidEsales\Twig\Extensions\Filters\PhpFunctionsExtension());
            yield 28 => ($container->privates['OxidEsales\\Twig\\Extensions\\Filters\\RegexReplaceExtension'] ??= new \OxidEsales\Twig\Extensions\Filters\RegexReplaceExtension());
            yield 29 => ($container->privates['OxidEsales\\Twig\\Extensions\\CaptureExtension'] ??= new \OxidEsales\Twig\Extensions\CaptureExtension());
            yield 30 => ($container->privates['OxidEsales\\Twig\\Extensions\\InsertNewBasketItemExtension'] ?? self::getInsertNewBasketItemExtensionService($container));
            yield 31 => ($container->privates['OxidEsales\\Twig\\Extensions\\InsertTrackerExtension'] ??= new \OxidEsales\Twig\Extensions\InsertTrackerExtension());
            yield 32 => ($container->privates['OxidEsales\\Twig\\Extensions\\GetRequestVariablesExtension'] ??= new \OxidEsales\Twig\Extensions\GetRequestVariablesExtension());
            yield 33 => ($container->privates['OxidEsales\\Twig\\Extensions\\ExtendsExtension'] ?? self::getExtendsExtensionService($container));
            yield 34 => ($container->privates['OxidEsales\\Twig\\Extensions\\IncludeContentExtension'] ?? self::getIncludeContentExtensionService($container));
        }, 35), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['OxidEsales\\Twig\\Escaper\\DecEntityEscaper'] ??= new \OxidEsales\Twig\Escaper\DecEntityEscaper());
            yield 1 => ($container->privates['OxidEsales\\Twig\\Escaper\\HexEntityEscaper'] ??= new \OxidEsales\Twig\Escaper\HexEntityEscaper());
            yield 2 => ($container->privates['OxidEsales\\Twig\\Escaper\\HexEscaper'] ??= new \OxidEsales\Twig\Escaper\HexEscaper());
            yield 3 => ($container->privates['OxidEsales\\Twig\\Escaper\\HtmlAllEscaper'] ??= new \OxidEsales\Twig\Escaper\HtmlAllEscaper());
            yield 4 => ($container->privates['OxidEsales\\Twig\\Escaper\\MailEscaper'] ??= new \OxidEsales\Twig\Escaper\MailEscaper());
            yield 5 => ($container->privates['OxidEsales\\Twig\\Escaper\\NonStdEscaper'] ??= new \OxidEsales\Twig\Escaper\NonStdEscaper());
            yield 6 => ($container->privates['OxidEsales\\Twig\\Escaper\\QuotesEscaper'] ??= new \OxidEsales\Twig\Escaper\QuotesEscaper());
            yield 7 => ($container->privates['OxidEsales\\Twig\\Escaper\\UrlPathInfoEscaper'] ??= new \OxidEsales\Twig\Escaper\UrlPathInfoEscaper());
        }, 8)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge
     */
    protected static function getAdminThemeBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin_twig');
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContextInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext
     */
    protected static function getBasicContextInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Transition\Utility\ContextInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context
     */
    protected static function getContextInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context();
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorServiceBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorServiceBridge
     */
    protected static function getEmailValidatorServiceBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorServiceBridge(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorService()));
    }

    /**
     * Gets the public 'OxidEsales\EshopCommunity\Internal\Utility\Header\Bridge\HeaderGeneratorBridgeInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Utility\Header\Bridge\CsvHeaderGeneratorBridge
     */
    protected static function getHeaderGeneratorBridgeInterfaceService($container)
    {
        return $container->services['OxidEsales\\EshopCommunity\\Internal\\Utility\\Header\\Bridge\\HeaderGeneratorBridgeInterface'] = new \OxidEsales\EshopCommunity\Internal\Utility\Header\Bridge\CsvHeaderGeneratorBridge(new \OxidEsales\EshopCommunity\Internal\Utility\Header\CsvHeaderGenerator());
    }

    /**
     * Gets the public 'OxidEsales\Twig\TwigEngineConfigurationInterface' shared autowired service.
     *
     * @return \OxidEsales\Twig\TwigEngineConfiguration
     */
    protected static function getTwigEngineConfigurationInterfaceService($container)
    {
        return $container->services['OxidEsales\\Twig\\TwigEngineConfigurationInterface'] = new \OxidEsales\Twig\TwigEngineConfiguration(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\Twig\\TwigContextInterface'] ?? self::getTwigContextInterfaceService($container)), false, ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\ShopTemplateCacheServiceInterface'] ?? self::getShopTemplateCacheServiceInterfaceService($container)));
    }

    /**
     * Gets the public 'Psr\Log\LoggerInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Logger\Wrapper\LoggerWrapper
     */
    protected static function getLoggerInterfaceService($container)
    {
        return $container->services['Psr\\Log\\LoggerInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Wrapper\LoggerWrapper((new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Factory\MonologLoggerFactory(new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Configuration\MonologConfiguration('OXID Logger', ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())->getLogFilePath(), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())->getLogLevel()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Logger\\Validator\\LoggerConfigurationValidatorInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Logger\Validator\PsrLoggerConfigurationValidator())))->create());
    }

    /**
     * Gets the public 'Symfony\Component\EventDispatcher\EventDispatcherInterface' shared autowired service.
     *
     * @return \Symfony\Component\EventDispatcher\EventDispatcher
     */
    protected static function getEventDispatcherInterfaceService($container)
    {
        $container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] = $instance = new \Symfony\Component\EventDispatcher\EventDispatcher();

        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Event\\ProjectYamlChangedEvent', [#[\Closure(name: 'OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber')] fn () => ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Container\\Event\\ConfigurationChangedEventSubscriber'] ??= new \OxidEsales\EshopCommunity\Internal\Container\Event\ConfigurationChangedEventSubscriber()), 'resetContainer'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentWithOrphanSettingEvent', [#[\Closure(name: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber')] fn () => ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber'] ?? self::getShopEnvironmentMisconfigurationEventSubscriberService($container)), 'logOrphanSetting'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleActivationEvent', [#[\Closure(name: 'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\EventSubscriber\\DispatchLegacyEventsSubscriber')] fn () => ($container->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] ?? self::getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService($container)), 'executeMetadataOnActivationEvent'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\BeforeModuleDeactivationEvent', [#[\Closure(name: 'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\EventSubscriber\\DispatchLegacyEventsSubscriber')] fn () => ($container->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] ?? self::getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService($container)), 'executeMetadataOnDeactivationEvent'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\ServicesYamlConfigurationErrorEvent', [#[\Closure(name: 'oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\EventSubscriber\\EventLoggingSubscriber')] fn () => ($container->privates['oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber'] ?? self::getOxidEsales_Module_Setup_Service_Eventsubscriber_EventLoggingSubscriberService($container)), 'logConfigurationError'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleActivationEvent', [#[\Closure(name: 'oxid_esales.module.cache.invalidate_module_cache_event_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\InvalidateModuleCacheEventSubscriber')] fn () => ($container->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] ?? self::getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService($container)), 'invalidateModuleCache'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Event\\FinalizingModuleDeactivationEvent', [#[\Closure(name: 'oxid_esales.module.cache.invalidate_module_cache_event_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\InvalidateModuleCacheEventSubscriber')] fn () => ($container->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] ?? self::getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService($container)), 'invalidateModuleCache'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Event\\ModuleConfigurationChangedEvent', [#[\Closure(name: 'oxid_esales.module.cache.invalidate_module_cache_event_subscriber', class: 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\InvalidateModuleCacheEventSubscriber')] fn () => ($container->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] ?? self::getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService($container)), 'invalidateModuleCache'], 0);
        $instance->addListener('OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Event\\AdminModeChangedEvent', [#[\Closure(name: 'OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber')] fn () => ($container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'] ?? self::getAdminModeChangeEventSubscriberService($container)), 'reloadTemplatePaths'], 0);

        return $instance;
    }

    /**
     * Gets the public 'console.command_loader' shared service.
     *
     * @return \Symfony\Component\Console\CommandLoader\ContainerCommandLoader
     */
    protected static function getConsole_CommandLoaderService($container)
    {
        return $container->services['console.command_loader'] = new \Symfony\Component\Console\CommandLoader\ContainerCommandLoader(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand' => ['services', 'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand', 'getDemodataCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand', 'getCreateUserCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand', 'getInstallModuleAssetsCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand', 'getModuleInstallCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand', 'getModuleUninstallCommandService', false],
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand' => ['privates', 'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand', 'getShopSetupCommandService', false],
            'oxid_esales.command.clearcache_command' => ['privates', 'oxid_esales.command.clearcache_command', 'getOxidEsales_Command_ClearcacheCommandService', false],
            'oxid_esales.command.module_activate_command' => ['privates', 'oxid_esales.command.module_activate_command', 'getOxidEsales_Command_ModuleActivateCommandService', false],
            'oxid_esales.command.module_deactivate_command' => ['privates', 'oxid_esales.command.module_deactivate_command', 'getOxidEsales_Command_ModuleDeactivateCommandService', false],
        ], [
            'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand' => 'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand',
            'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand' => 'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand',
            'oxid_esales.command.clearcache_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Cache\\Command\\ClearCacheCommand',
            'oxid_esales.command.module_activate_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleActivateCommand',
            'oxid_esales.command.module_deactivate_command' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleDeactivateCommand',
        ]), ['oe:admin:create-user' => 'OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand', 'oe:cache:clear' => 'oxid_esales.command.clearcache_command', 'oe:module:activate' => 'oxid_esales.command.module_activate_command', 'oe:module:deactivate' => 'oxid_esales.command.module_deactivate_command', 'oe:module:install' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand', 'oe:module:uninstall' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand', 'oe:module:install-assets' => 'OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand', 'oe:setup:shop' => 'OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand', 'oe:setup:demodata' => 'OxidEsales\\DemoDataInstaller\\Framework\\Module\\Demodata\\DemodataCommand']);
    }

    /**
     * Gets the public 'oxid_esales.console.symfony.component.console.application' shared autowired service.
     *
     * @return \Symfony\Component\Console\Application
     */
    protected static function getOxidEsales_Console_Symfony_Component_Console_ApplicationService($container)
    {
        return $container->services['oxid_esales.console.symfony.component.console.application'] = new \Symfony\Component\Console\Application();
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.bootstrap_module_installer' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\BootstrapModuleInstaller
     */
    protected static function getOxidEsales_Module_Install_Service_BootstrapModuleInstallerService($container)
    {
        return $container->services['oxid_esales.module.install.service.bootstrap_module_installer'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\BootstrapModuleInstaller(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface'] ?? self::getModuleFilesInstallerInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleConfigurationInstallerInterface'] ?? self::getModuleConfigurationInstallerInterfaceService($container)));
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.installed_shop_project_configuration_generator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator
     */
    protected static function getOxidEsales_Module_Install_Service_InstalledShopProjectConfigurationGeneratorService($container)
    {
        return $container->services['oxid_esales.module.install.service.installed_shop_project_configuration_generator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));
    }

    /**
     * Gets the public 'oxid_esales.module.install.service.launched_shop_project_configuration_generator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator
     */
    protected static function getOxidEsales_Module_Install_Service_LaunchedShopProjectConfigurationGeneratorService($container)
    {
        return $container->services['oxid_esales.module.install.service.launched_shop_project_configuration_generator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Install\Service\ProjectConfigurationGenerator(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()));
    }

    /**
     * Gets the public 'oxid_esales.symfony.file_system' shared autowired service.
     *
     * @return \Symfony\Component\Filesystem\Filesystem
     */
    protected static function getOxidEsales_Symfony_FileSystemService($container)
    {
        return $container->services['oxid_esales.symfony.file_system'] = new \Symfony\Component\Filesystem\Filesystem();
    }

    /**
     * Gets the public 'oxid_esales.templating.admin.navigation.file.locator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\AdminNavigationFileLocator
     */
    protected static function getOxidEsales_Templating_Admin_Navigation_File_LocatorService($container)
    {
        return $container->services['oxid_esales.templating.admin.navigation.file.locator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\AdminNavigationFileLocator(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator'] ?? self::getEditionUserFileLocatorService($container));
            yield 1 => ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator'] ?? self::getEditionMenuFileLocatorService($container));
            yield 2 => ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Template\\Locator\\ModulesMenuFileLocator'] ?? self::getModulesMenuFileLocatorService($container));
        }, 3));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Domain\Admin\Command\CreateUserCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Admin\Command\CreateUserCommand
     */
    protected static function getCreateUserCommandService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Email\\EmailValidatorServiceInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Utility\Email\EmailValidatorService());

        $container->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Admin\\Command\\CreateUserCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Domain\Admin\Command\CreateUserCommand($a, new \OxidEsales\EshopCommunity\Internal\Domain\Admin\Service\AdminUserService(new \OxidEsales\EshopCommunity\Internal\Domain\Admin\Dao\AdminDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container))), new \OxidEsales\EshopCommunity\Internal\Domain\Admin\Factory\AdminFactory(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter()), $a, ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Hash\\Service\\PasswordHashServiceInterface'] ?? self::getPasswordHashServiceInterfaceService($container)))), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));

        $instance->setName('oe:admin:create-user');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDao
     */
    protected static function getRatingDaoInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Domain\\Review\\Dao\\RatingDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Domain\Review\Dao\RatingDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Domain\Review\DataMapper\RatingDataMapper());
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ProjectYamlDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ContainerAwareProjectYamlDao
     */
    protected static function getProjectYamlDaoInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Dao\ContainerAwareProjectYamlDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container)), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleAssetsCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleAssetsCommand
     */
    protected static function getInstallModuleAssetsCommandService($container)
    {
        $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\InstallModuleAssetsCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\InstallModuleAssetsCommand(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleFilesInstallerInterface'] ?? self::getModuleFilesInstallerInterfaceService($container)));

        $instance->setName('oe:module:install-assets');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleInstallCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleInstallCommand
     */
    protected static function getModuleInstallCommandService($container)
    {
        $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleInstallCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleInstallCommand(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface'] ?? self::getModuleInstallerInterfaceService($container)));

        $instance->setName('oe:module:install');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleUninstallCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleUninstallCommand
     */
    protected static function getModuleUninstallCommandService($container)
    {
        $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Command\\ModuleUninstallCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleUninstallCommand(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Install\\Service\\ModuleInstallerInterface'] ?? self::getModuleInstallerInterfaceService($container)), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] ?? self::getModulePathResolverInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()));

        $instance->setName('oe:module:uninstall');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDao
     */
    protected static function getModuleConfigurationDaoInterfaceService($container)
    {
        $a = ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container));

        if (isset($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'])) {
            return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'];
        }

        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleConfigurationDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfigurationDataMapper(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ClassExtensionsDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ControllersDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\EventsDataMapper(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\DataMapper\ModuleConfiguration\ModuleSettingsDataMapper()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] ?? self::getFileStorageFactoryInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Cache\ClassPropertyModuleConfigurationCache(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleEnvironmentConfigurationExtender(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleEnvironmentConfigurationDaoInterface'] ?? self::getModuleEnvironmentConfigurationDaoInterfaceService($container)), $a), ($container->privates['oxid_esales.module.configuration.node'] ?? self::getOxidEsales_Module_Configuration_NodeService($container)), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), $a);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleEnvironmentConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleEnvironmentConfigurationDao
     */
    protected static function getModuleEnvironmentConfigurationDaoInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleEnvironmentConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ModuleEnvironmentConfigurationDao(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] ?? self::getFileStorageFactoryInterfaceService($container)), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()), ($container->privates['oxid_esales.module.configuration.node'] ?? self::getOxidEsales_Module_Configuration_NodeService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber
     */
    protected static function getShopEnvironmentMisconfigurationEventSubscriberService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopEnvironmentMisconfigurationEventSubscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Dao\ShopEnvironmentMisconfigurationEventSubscriber(($container->services['Psr\\Log\\LoggerInterface'] ?? self::getLoggerInterfaceService($container)));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProviderInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProvider
     */
    protected static function getActiveModulesDataProviderInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container));

        if (isset($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'])) {
            return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'];
        }
        $b = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] ?? self::getModulePathResolverInterfaceService($container));

        if (isset($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'])) {
            return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'];
        }
        $c = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ActiveClassExtensionChainResolverInterface'] ?? self::getActiveClassExtensionChainResolverInterfaceService($container));

        if (isset($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'])) {
            return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'];
        }

        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Facade\ActiveModulesDataProvider($a, $b, ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] ?? self::getModuleCacheServiceInterfaceService($container)), $c);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProviderInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProvider
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProviderInterface" service is deprecated.
     */
    protected static function getMetaDataSchemataProviderInterfaceService($container)
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\MetaDataSchemataProviderInterface" service is deprecated.');

        return new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataSchemataProvider($container->parameters['oxid_esales.module.metadata.service.metadata_schemata']);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDaoInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDao
     */
    protected static function getModuleConfigurationDaoInterface2Service($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Dao\\ModuleConfigurationDaoInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\ModuleConfigurationDao(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataProvider(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Dao\MetaDataNormalizer(), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataValidatorAggregate(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\ModuleIdValidator(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\ModuleSettingBooleanValidator()), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Converter\MetaDataConverterAggregate(new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Converter\ModuleSettingsBooleanConverter())), new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\DataMapper\MetaDataMapper(self::getMetaDataSchemaValidatorInterfaceService($container)));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidator
     *
     * @deprecated Since oxid-esales/oxideshop-ce 6.5.0: The "OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidatorInterface" service is deprecated.
     */
    protected static function getMetaDataSchemaValidatorInterfaceService($container)
    {
        trigger_deprecation('oxid-esales/oxideshop-ce', '6.5.0', 'The "OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\MetaData\\Validator\\MetaDataSchemaValidatorInterface" service is deprecated.');

        return new \OxidEsales\EshopCommunity\Internal\Framework\Module\MetaData\Validator\MetaDataSchemaValidator(self::getMetaDataSchemataProviderInterfaceService($container));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolver
     */
    protected static function getModuleAssetsPathResolverInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModuleAssetsPathResolverInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModuleAssetsPathResolver(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModulePathResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModulePathResolver
     */
    protected static function getModulePathResolverInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container));

        if (isset($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'])) {
            return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'];
        }

        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Path\ModulePathResolver($a, ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationService
     */
    protected static function getModuleActivationServiceInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter());
        $b = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] ?? self::getModulePathResolverInterfaceService($container));

        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleActivationService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ModuleConfigurationValidatorAggregate(new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ControllersValidator($a, ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['Psr\\Log\\LoggerInterface'] ?? self::getLoggerInterfaceService($container))), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ClassExtensionsValidator($a), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\EventsValidator(), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Validator\ServicesYamlValidator(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Dao\\ProjectYamlDaoInterface'] ?? self::getProjectYamlDaoInterfaceService($container)), $b)), new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\Service\ModuleServicesImporter(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext())), $b);
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Module\Template\Locator\ModulesMenuFileLocator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Template\Locator\ModulesMenuFileLocator
     */
    protected static function getModulesMenuFileLocatorService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Template\\Locator\\ModulesMenuFileLocator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Template\Locator\ModulesMenuFileLocator(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'] ?? self::getActiveModulesDataProviderInterfaceService($container)), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Storage\FileStorageFactoryInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Storage\YamlFileStorageFactory
     */
    protected static function getFileStorageFactoryInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Storage\\FileStorageFactoryInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Storage\YamlFileStorageFactory(new \Symfony\Component\Config\FileLocator(), new \Symfony\Component\Lock\LockFactory(new \Symfony\Component\Lock\Store\FlockStore()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\ShopTemplateCacheServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\ShopTemplateCacheService
     */
    protected static function getShopTemplateCacheServiceInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\ShopTemplateCacheServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\ShopTemplateCacheService(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator
     */
    protected static function getEditionMenuFileLocatorService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionMenuFileLocator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionMenuFileLocator(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin_twig')), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator
     */
    protected static function getEditionUserFileLocatorService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Locator\\EditionUserFileLocator'] = new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Locator\EditionUserFileLocator(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Theme\\Bridge\\AdminThemeBridgeInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Theme\Bridge\AdminThemeBridge('admin_twig')), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Setup\ShopSetupCommand' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Setup\ShopSetupCommand
     */
    protected static function getShopSetupCommandService($container)
    {
        $a = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext());
        $b = new \OxidEsales\EshopCommunity\Internal\Setup\ConfigFile\ConfigFileDao($a);
        $c = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter());

        $d = new \OxidEsales\EshopCommunity\Internal\Framework\Config\Dao\ShopConfigurationSettingDao(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Database\\QueryBuilderFactoryInterface'] ?? self::getQueryBuilderFactoryInterfaceService($container)), new \OxidEsales\EshopCommunity\Internal\Framework\Config\Utility\ShopSettingEncoder(), $c, ($container->services['Symfony\\Component\\EventDispatcher\\EventDispatcherInterface'] ?? self::getEventDispatcherInterfaceService($container)));

        $container->privates['OxidEsales\\EshopCommunity\\Internal\\Setup\\ShopSetupCommand'] = $instance = new \OxidEsales\EshopCommunity\Internal\Setup\ShopSetupCommand(new \OxidEsales\EshopCommunity\Internal\Setup\Database\Service\DatabaseChecker($a), new \OxidEsales\EshopCommunity\Internal\Setup\Database\Service\DatabaseInstaller(new \OxidEsales\EshopCommunity\Internal\Setup\Database\Service\DatabaseCreator(), new \OxidEsales\EshopCommunity\Internal\Setup\Database\Service\DatabaseInitiator($a, new \OxidEsales\EshopCommunity\Internal\Framework\Migration\MigrationExecutor(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()))), $b, $a), $b, new \OxidEsales\EshopCommunity\Internal\Setup\Directory\Service\DirectoryValidator(), new \OxidEsales\EshopCommunity\Internal\Setup\Language\LanguageInstaller($d, $a), new \OxidEsales\EshopCommunity\Internal\Setup\Htaccess\HtaccessUpdater(new \OxidEsales\EshopCommunity\Internal\Setup\Htaccess\HtaccessDaoFactory($a), new \OxidEsales\EshopCommunity\Internal\Utility\Url\UrlParser()), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\DIContainer\\Service\\ShopStateServiceInterface'] ?? self::getShopStateServiceInterfaceService($container)), $c, $a, $d);

        $instance->setName('oe:setup:shop');

        return $instance;
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Transition\Adapter\Translator\TranslatorInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Transition\Adapter\Translator\LegacyTemplateTranslator
     */
    protected static function getTranslatorInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\Translator\\TranslatorInterface'] = new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\Translator\LegacyTemplateTranslator(\OxidEsales\Eshop\Core\Registry::getLang());
    }

    /**
     * Gets the private 'OxidEsales\EshopCommunity\Internal\Utility\Hash\Service\PasswordHashServiceInterface' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Utility\Hash\Service\BcryptPasswordHashService
     */
    protected static function getPasswordHashServiceInterfaceService($container)
    {
        return $container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Hash\\Service\\PasswordHashServiceInterface'] = new \OxidEsales\EshopCommunity\Internal\Utility\Hash\Service\BcryptPasswordHashService(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Utility\\Authentication\\Policy\\PasswordPolicyInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Utility\Authentication\Policy\PasswordPolicy()), 10);
    }

    /**
     * Gets the private 'OxidEsales\Eshop\Core\Config' shared autowired service.
     *
     * @return \OxidEsales\Eshop\Core\Config
     */
    protected static function getConfigService($container)
    {
        return $container->privates['OxidEsales\\Eshop\\Core\\Config'] = \OxidEsales\Eshop\Core\Registry::getConfig();
    }

    /**
     * Gets the private 'OxidEsales\Twig\Event\AdminModeChangeEventSubscriber' shared autowired service.
     *
     * @return \OxidEsales\Twig\Event\AdminModeChangeEventSubscriber
     */
    protected static function getAdminModeChangeEventSubscriberService($container)
    {
        $a = ($container->privates['twig.loader.filesystem'] ?? self::getTwig_Loader_FilesystemService($container));

        if (isset($container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'])) {
            return $container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'];
        }
        $b = ($container->privates['OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface'] ?? self::getTemplateDirectoryResolverInterfaceService($container));

        if (isset($container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'])) {
            return $container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'];
        }

        return $container->privates['OxidEsales\\Twig\\Event\\AdminModeChangeEventSubscriber'] = new \OxidEsales\Twig\Event\AdminModeChangeEventSubscriber($a, $b);
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\ExtendsExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\ExtendsExtension
     */
    protected static function getExtendsExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\ExtendsExtension'] = new \OxidEsales\Twig\Extensions\ExtendsExtension(($container->privates['OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainResolverInterface'] ?? self::getTemplateChainResolverInterfaceService($container)));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\DateFormatExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\DateFormatExtension
     */
    protected static function getDateFormatExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\DateFormatExtension'] = new \OxidEsales\Twig\Extensions\Filters\DateFormatExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\DateFormatHelper());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\FileSizeExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\FileSizeExtension
     */
    protected static function getFileSizeExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FileSizeExtension'] = new \OxidEsales\Twig\Extensions\Filters\FileSizeExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\FileSizeLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\FormatCurrencyExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\FormatCurrencyExtension
     */
    protected static function getFormatCurrencyExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatCurrencyExtension'] = new \OxidEsales\Twig\Extensions\Filters\FormatCurrencyExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\FormatCurrencyLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\FormatDateExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\FormatDateExtension
     */
    protected static function getFormatDateExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatDateExtension'] = new \OxidEsales\Twig\Extensions\Filters\FormatDateExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\FormatDateLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\FormatTimeExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\FormatTimeExtension
     */
    protected static function getFormatTimeExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\FormatTimeExtension'] = new \OxidEsales\Twig\Extensions\Filters\FormatTimeExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\FormatTimeLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\SmartWordwrapExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\SmartWordwrapExtension
     */
    protected static function getSmartWordwrapExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\SmartWordwrapExtension'] = new \OxidEsales\Twig\Extensions\Filters\SmartWordwrapExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\SmartWordwrapLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\TranslateExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\TranslateExtension
     */
    protected static function getTranslateExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TranslateExtension'] = new \OxidEsales\Twig\Extensions\Filters\TranslateExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\TranslateFilterLogic(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\Translator\\TranslatorInterface'] ?? self::getTranslatorInterfaceService($container))));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\TranslateSalutationExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\TranslateSalutationExtension
     */
    protected static function getTranslateSalutationExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TranslateSalutationExtension'] = new \OxidEsales\Twig\Extensions\Filters\TranslateSalutationExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\TranslateSalutationLogic(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\Translator\\TranslatorInterface'] ?? self::getTranslatorInterfaceService($container))));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\TruncateExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\TruncateExtension
     */
    protected static function getTruncateExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\TruncateExtension'] = new \OxidEsales\Twig\Extensions\Filters\TruncateExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\TruncateLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\Filters\WordwrapExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\Filters\WordwrapExtension
     */
    protected static function getWordwrapExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\Filters\\WordwrapExtension'] = new \OxidEsales\Twig\Extensions\Filters\WordwrapExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\WordwrapLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\FormatPriceExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\FormatPriceExtension
     */
    protected static function getFormatPriceExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\FormatPriceExtension'] = new \OxidEsales\Twig\Extensions\FormatPriceExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\FormatPriceLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\HasRightsExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\HasRightsExtension
     */
    protected static function getHasRightsExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\HasRightsExtension'] = new \OxidEsales\Twig\Extensions\HasRightsExtension(new \OxidEsales\Twig\TokenParser\HasRightsTokenParser('OxidEsales\\Twig\\Node\\HasRightsNode'));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\IfContentExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\IfContentExtension
     */
    protected static function getIfContentExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\IfContentExtension'] = new \OxidEsales\Twig\Extensions\IfContentExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\IfContentLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\IncludeContentExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\IncludeContentExtension
     */
    protected static function getIncludeContentExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\IncludeContentExtension'] = new \OxidEsales\Twig\Extensions\IncludeContentExtension(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\TemplateLogic\\ContentFactory'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\ContentFactory()));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\IncludeExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\IncludeExtension
     */
    protected static function getIncludeExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\IncludeExtension'] = new \OxidEsales\Twig\Extensions\IncludeExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\IncludeDynamicLogic(), ($container->privates['OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainResolverInterface'] ?? self::getTemplateChainResolverInterfaceService($container)));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\IncludeWidgetExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\IncludeWidgetExtension
     */
    protected static function getIncludeWidgetExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\IncludeWidgetExtension'] = new \OxidEsales\Twig\Extensions\IncludeWidgetExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\IncludeWidgetLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\InputHelpExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\InputHelpExtension
     */
    protected static function getInputHelpExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\InputHelpExtension'] = new \OxidEsales\Twig\Extensions\InputHelpExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\InputHelpLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\InsertNewBasketItemExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\InsertNewBasketItemExtension
     */
    protected static function getInsertNewBasketItemExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\InsertNewBasketItemExtension'] = new \OxidEsales\Twig\Extensions\InsertNewBasketItemExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\InsertNewBasketItemLogicTwig());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\ScriptExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\ScriptExtension
     */
    protected static function getScriptExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\ScriptExtension'] = new \OxidEsales\Twig\Extensions\ScriptExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\ScriptLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\SmartyCycleExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\SmartyCycleExtension
     *
     * @deprecated Since oxid-esales/twig-component 2.2.0: The "OxidEsales\Twig\Extensions\SmartyCycleExtension" service is deprecated.
     */
    protected static function getSmartyCycleExtensionService($container)
    {
        trigger_deprecation('oxid-esales/twig-component', '2.2.0', 'The "OxidEsales\\Twig\\Extensions\\SmartyCycleExtension" service is deprecated.');

        return $container->privates['OxidEsales\\Twig\\Extensions\\SmartyCycleExtension'] = new \OxidEsales\Twig\Extensions\SmartyCycleExtension();
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\StyleExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\StyleExtension
     */
    protected static function getStyleExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\StyleExtension'] = new \OxidEsales\Twig\Extensions\StyleExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\StyleLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\TranslateExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\TranslateExtension
     */
    protected static function getTranslateExtension2Service($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\TranslateExtension'] = new \OxidEsales\Twig\Extensions\TranslateExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\TranslateFunctionLogic(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\Translator\\TranslatorInterface'] ?? self::getTranslatorInterfaceService($container))));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Extensions\UrlExtension' shared autowired service.
     *
     * @return \OxidEsales\Twig\Extensions\UrlExtension
     */
    protected static function getUrlExtensionService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Extensions\\UrlExtension'] = new \OxidEsales\Twig\Extensions\UrlExtension(new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\SeoUrlLogic(), new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\TemplateLogic\AddUrlParametersLogic());
    }

    /**
     * Gets the private 'OxidEsales\Twig\Resolver\ModulesTemplateDirectoryResolver' shared autowired service.
     *
     * @return \OxidEsales\Twig\Resolver\ModulesTemplateDirectoryResolver
     */
    protected static function getModulesTemplateDirectoryResolverService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Facade\\ActiveModulesDataProviderInterface'] ?? self::getActiveModulesDataProviderInterfaceService($container));

        if (isset($container->privates['OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver'])) {
            return $container->privates['OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver'];
        }

        return $container->privates['OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver'] = new \OxidEsales\Twig\Resolver\ModulesTemplateDirectoryResolver($a, ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Path\\ModulePathResolverInterface'] ?? self::getModulePathResolverInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Resolver\ShopTemplateDirectoryResolver' shared autowired service.
     *
     * @return \OxidEsales\Twig\Resolver\ShopTemplateDirectoryResolver
     */
    protected static function getShopTemplateDirectoryResolverService($container)
    {
        return $container->privates['OxidEsales\\Twig\\Resolver\\ShopTemplateDirectoryResolver'] = new \OxidEsales\Twig\Resolver\ShopTemplateDirectoryResolver(($container->privates['OxidEsales\\Eshop\\Core\\Config'] ?? self::getConfigService($container)));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Resolver\TemplateChain\TemplateChainResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainResolver
     */
    protected static function getTemplateChainResolverInterfaceService($container)
    {
        $a = new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ChainAppender(($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem()));

        $b = new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleExtensions\ShopTemplateChainAppender(($container->privates['OxidEsales\\Twig\\TwigContextInterface'] ?? self::getTwigContextInterfaceService($container)), $a);

        return $container->privates['OxidEsales\\Twig\\Resolver\\TemplateChain\\TemplateChainResolverInterface'] = new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainResolver(new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainBuilderAggregate([new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainBuilder(($container->privates['OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver'] ?? self::getModulesTemplateDirectoryResolverService($container)), [new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleExtensions\ShopTemplateHandler($b), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleExtensions\ShopExtensionTemplateHandler($b), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleTemplateHandler($a), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleExtensions\ModuleTemplateHandler($a), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ModuleExtensions\ModuleExtensionTemplateHandler($a)]), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainBuilder(($container->privates['OxidEsales\\Twig\\Resolver\\ShopTemplateDirectoryResolver'] ?? self::getShopTemplateDirectoryResolverService($container)), [new \OxidEsales\Twig\Resolver\TemplateChain\TemplateHandler\ShopTemplateHandler($a)])], new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainValidator(), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateType\InitialTemplateResolver(), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateChainSorter(new \OxidEsales\Twig\Resolver\TemplateChain\SortingConfigurationValidator(), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ShopConfigurationDaoInterface'] ?? self::getShopConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->services['Psr\\Log\\LoggerInterface'] ?? self::getLoggerInterfaceService($container)))), new \OxidEsales\Twig\Resolver\TemplateChain\TemplateType\TemplateTypeFactory(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Resolver\\TemplateFileResolverInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Resolver\TemplateFileResolver('html.twig'))));
    }

    /**
     * Gets the private 'OxidEsales\Twig\Resolver\TemplateDirectoryResolverInterface' shared autowired service.
     *
     * @return \OxidEsales\Twig\Resolver\TemplateDirectoryResolverAggregate
     */
    protected static function getTemplateDirectoryResolverInterfaceService($container)
    {
        $a = ($container->privates['OxidEsales\\Twig\\Resolver\\ModulesTemplateDirectoryResolver'] ?? self::getModulesTemplateDirectoryResolverService($container));

        if (isset($container->privates['OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface'])) {
            return $container->privates['OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface'];
        }

        return $container->privates['OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface'] = new \OxidEsales\Twig\Resolver\TemplateDirectoryResolverAggregate([($container->privates['OxidEsales\\Twig\\Resolver\\ShopTemplateDirectoryResolver'] ?? self::getShopTemplateDirectoryResolverService($container)), $a]);
    }

    /**
     * Gets the private 'OxidEsales\Twig\TwigContextInterface' shared autowired service.
     *
     * @return \OxidEsales\Twig\TwigContext
     */
    protected static function getTwigContextInterfaceService($container)
    {
        return $container->privates['OxidEsales\\Twig\\TwigContextInterface'] = new \OxidEsales\Twig\TwigContext(($container->privates['OxidEsales\\Eshop\\Core\\Config'] ?? self::getConfigService($container)), 'admin_twig');
    }

    /**
     * Gets the private 'form.contact_form.contact_form_configuration' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\FormConfiguration\FormConfiguration
     */
    protected static function getForm_ContactForm_ContactFormConfigurationService($container)
    {
        return (new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormConfigurationFactory(new \OxidEsales\EshopCommunity\Internal\Domain\Contact\Form\ContactFormFieldsConfigurationDataProvider(), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context())))->getFormConfiguration();
    }

    /**
     * Gets the private 'oxid_esales.command.clearcache_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Cache\Command\ClearCacheCommand
     */
    protected static function getOxidEsales_Command_ClearcacheCommandService($container)
    {
        $a = ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context());

        $container->privates['oxid_esales.command.clearcache_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Cache\Command\ClearCacheCommand(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Transition\\Adapter\\ShopAdapterInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Adapter\ShopAdapter()), new \OxidEsales\EshopCommunity\Internal\Framework\Templating\Cache\TemplateCacheService($a, ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Templating\\Cache\\ShopTemplateCacheServiceInterface'] ?? self::getShopTemplateCacheServiceInterfaceService($container))), new \OxidEsales\EshopCommunity\Internal\Framework\DIContainer\Service\FilesystemContainerCache(($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\BasicContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\BasicContext()), ($container->services['oxid_esales.symfony.file_system'] ??= new \Symfony\Component\Filesystem\Filesystem())), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] ?? self::getModuleCacheServiceInterfaceService($container)), $a);

        $instance->setName('oe:cache:clear');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.command.module_activate_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleActivateCommand
     */
    protected static function getOxidEsales_Command_ModuleActivateCommandService($container)
    {
        $container->privates['oxid_esales.command.module_activate_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleActivateCommand(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? self::getModuleActivationServiceInterfaceService($container)));

        $instance->setName('oe:module:activate');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.command.module_deactivate_command' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleDeactivateCommand
     */
    protected static function getOxidEsales_Command_ModuleDeactivateCommandService($container)
    {
        $container->privates['oxid_esales.command.module_deactivate_command'] = $instance = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Command\ModuleDeactivateCommand(($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container)), ($container->services['OxidEsales\\EshopCommunity\\Internal\\Transition\\Utility\\ContextInterface'] ??= new \OxidEsales\EshopCommunity\Internal\Transition\Utility\Context()), ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Setup\\Service\\ModuleActivationServiceInterface'] ?? self::getModuleActivationServiceInterfaceService($container)));

        $instance->setName('oe:module:deactivate');

        return $instance;
    }

    /**
     * Gets the private 'oxid_esales.module.cache.invalidate_module_cache_event_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\InvalidateModuleCacheEventSubscriber
     */
    protected static function getOxidEsales_Module_Cache_InvalidateModuleCacheEventSubscriberService($container)
    {
        return $container->privates['oxid_esales.module.cache.invalidate_module_cache_event_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Cache\InvalidateModuleCacheEventSubscriber(($container->services['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Cache\\ModuleCacheServiceInterface'] ?? self::getModuleCacheServiceInterfaceService($container)));
    }

    /**
     * Gets the private 'oxid_esales.module.configuration.node' shared autowired service.
     *
     * @return \Symfony\Component\Config\Definition\NodeInterface
     */
    protected static function getOxidEsales_Module_Configuration_NodeService($container)
    {
        return $container->privates['oxid_esales.module.configuration.node'] = (new \OxidEsales\EshopCommunity\Internal\Framework\Module\Configuration\Definition\TreeBuilderFactory())->create();
    }

    /**
     * Gets the private 'oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\DispatchLegacyEventsSubscriber
     */
    protected static function getOxidEsales_Module_Setup_Service_Eventsubscriber_DispatchLegacyEventsSubscriberService($container)
    {
        $a = ($container->privates['OxidEsales\\EshopCommunity\\Internal\\Framework\\Module\\Configuration\\Dao\\ModuleConfigurationDaoInterface'] ?? self::getModuleConfigurationDaoInterfaceService($container));

        if (isset($container->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'])) {
            return $container->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'];
        }

        return $container->privates['oxid_esales.module.setup.service.eventsubscriber.dispatch_legacy_events_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\DispatchLegacyEventsSubscriber($a);
    }

    /**
     * Gets the private 'oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber' shared autowired service.
     *
     * @return \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\EventLoggingSubscriber
     */
    protected static function getOxidEsales_Module_Setup_Service_Eventsubscriber_EventLoggingSubscriberService($container)
    {
        return $container->privates['oxid_esales.module.setup.service.eventsubscriber.event_logging_subscriber'] = new \OxidEsales\EshopCommunity\Internal\Framework\Module\Setup\EventSubscriber\EventLoggingSubscriber(($container->services['Psr\\Log\\LoggerInterface'] ?? self::getLoggerInterfaceService($container)));
    }

    /**
     * Gets the private 'twig.loader.filesystem' shared autowired service.
     *
     * @return \OxidEsales\Twig\Loader\FilesystemLoader
     */
    protected static function getTwig_Loader_FilesystemService($container)
    {
        $a = ($container->privates['OxidEsales\\Twig\\Resolver\\TemplateDirectoryResolverInterface'] ?? self::getTemplateDirectoryResolverInterfaceService($container));

        if (isset($container->privates['twig.loader.filesystem'])) {
            return $container->privates['twig.loader.filesystem'];
        }

        return $container->privates['twig.loader.filesystem'] = new \OxidEsales\Twig\Loader\FilesystemLoader($a);
    }

    public function getParameter(string $name): array|bool|string|int|float|\UnitEnum|null
    {
        if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters))) {
            throw new ParameterNotFoundException($name);
        }
        if (isset($this->loadedDynamicParameters[$name])) {
            return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
        }

        return $this->parameters[$name];
    }

    public function hasParameter(string $name): bool
    {
        return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || \array_key_exists($name, $this->parameters);
    }

    public function setParameter(string $name, $value): void
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }

    public function getParameterBag(): ParameterBagInterface
    {
        if (!isset($this->parameterBag)) {
            $parameters = $this->parameters;
            foreach ($this->loadedDynamicParameters as $name => $loaded) {
                $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);
            }
            $this->parameterBag = new FrozenParameterBag($parameters);
        }

        return $this->parameterBag;
    }

    private $loadedDynamicParameters = [];
    private $dynamicParameters = [];

    private function getDynamicParameter(string $name)
    {
        throw new ParameterNotFoundException($name);
    }

    protected function getDefaultParameters(): array
    {
        return [
            'oxid_esales.module.metadata.service.metadata_schemata' => [
                '2.0' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    10 => 'controllers',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                ],
                '2.1' => [
                    0 => 'id',
                    1 => 'version',
                    2 => 'title',
                    3 => 'description',
                    4 => 'lang',
                    5 => 'thumbnail',
                    6 => 'author',
                    7 => 'url',
                    8 => 'email',
                    9 => 'extend',
                    10 => 'controllers',
                    11 => 'templates',
                    'blocks' => [
                        0 => 'theme',
                        1 => 'template',
                        2 => 'block',
                        3 => 'file',
                        4 => 'position',
                    ],
                    'settings' => [
                        0 => 'group',
                        1 => 'name',
                        2 => 'type',
                        3 => 'value',
                        4 => 'constraints',
                        5 => 'position',
                    ],
                    12 => 'events',
                    13 => 'smartyPluginDirectories',
                ],
            ],
            'deprecated' => [
                'package' => 'oxid-esales/oxideshop-ce',
                'version' => '6.5.0',
                'message' => 'The attribute will be removed',
            ],
            'oxid_esales.templating.engine_template_extension' => 'html.twig',
            'oxid_esales.templating.engine_autoescapes_html' => true,
            'oxid_esales.theme.admin.name' => 'admin_twig',
            'oxid_esales.utility.hash.service.password_hash.bcrypt.cost' => 10,
            'oxid_esales.utility.hash.service.password_hash.argon2.memory_cost' => 1024,
            'oxid_esales.utility.hash.service.password_hash.argon2.time_cost' => 2,
            'oxid_esales.utility.hash.service.password_hash.argon2.threads' => 2,
            'oxid_esales.templating.disable_twig_template_caching' => false,
            'console.command.ids' => [

            ],
        ];
    }
}
